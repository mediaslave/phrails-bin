#!/usr/bin/php -q
<?php

define('PHRAILS_VERSION', '0.01');

$script_name = array_shift($argv);
$path = array_shift($argv);
$include_framework = array_shift($argv);
if($include_framework === null)
	$include_framework = false;



define('CUR_DIR', dirname(__FILE__));
if($path !== null){
	//Create the structure.
	create_structure($path);
	
	//Do we need to clone the framework into the directory?
	if($include_framework === true){
		print 'Cloning framework from github.com.' . "\n";
		exec("git clone git@github.com:mediaslave/phrails.git $path/framework");
		print 'Framework cloned.' . "\n";
	}
}
else{
	print 'Must specify a name for the project. Example: ./phrails /home/jpalmer/to-do.';
}
/**
 * Create the directory structure for a project.
 *
 * @param string $path 
 * @return void
 * @author Justin Palmer
 */
function create_structure($path){
	create_directory($path);
		create_file('index.php', $path);
		//app
		create_directory($path . '/app');
		create_directory($path . '/app/controllers');
			create_file('ApplicationController.php', $path . '/app/controllers');
		create_directory($path . '/app/helpers');
		create_directory($path . '/app/models');
		create_directory($path . '/app/views');
		create_directory($path . '/app/views/layouts');
			create_file('application.html.php', $path . '/app/views/layouts');
		//config
		create_directory($path . '/config');
			create_file('database.ini', $path . '/config');
			create_file('environment.php', $path . '/config');
			create_file('routes.php', $path . '/config');
		create_directory($path . '/config/environments');	
			create_file('development.php', $path . '/config/environments');
			create_file('production.php', $path . '/config/environments');
		//lib
		create_directory($path . '/lib');
		//public
		create_directory($path . '/public');
		create_directory($path . '/public/images');
		create_directory($path . '/public/javascript');
		create_directory($path . '/public/stylesheets');
		//vendor
		create_directory($path . '/vendor');
		create_directory($path . '/vendor/plugins');
}
/**
 * Create on directory and output some information
 *
 * @param string $path 
 * @return void
 * @author Justin Palmer
 */
function create_directory($path){
	if(is_dir($path)){
		print "Exists: $path\n";
	}else{
		mkdir($path);
		print "Created: $path\n";
	}
}
/**
 * Copy a file from the source to the correct location.
 *
 * @param string $src 
 * @param string $dest 
 * @return void
 * @author Justin Palmer
 */
function create_file($src, $dest){
	$dest = $dest . '/' . $src;
	$src = CUR_DIR . '/__files__/' . $src;
	if(is_file($dest)){
		print "Exists: $dest\n";
	}else{
		copy($src, $dest);
		print "Created: $dest\n";
	}
}